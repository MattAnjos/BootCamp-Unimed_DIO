{"mappings":"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","sources":["app.ts"],"sourcesContent":["// Um desenvolvedor tentou criar um projeto que consome a base de dados de filme do TMDB para criar um organizador de filmes, mas desistiu \r\n// pois considerou o seu código inviável. Você consegue usar typescript para organizar esse código e a partir daí aprimorar o que foi feito?\r\n\r\n// A ideia dessa atividade é criar um aplicativo que: \r\n//    - Busca filmes\r\n//    - Apresenta uma lista com os resultados pesquisados\r\n//    - Permite a criação de listas de filmes e a posterior adição de filmes nela\r\n\r\n// Todas as requisições necessárias para as atividades acima já estão prontas, mas a implementação delas ficou pela metade (não vou dar tudo de graça).\r\n// Atenção para o listener do botão login-button que devolve o sessionID do usuário\r\n// É necessário fazer um cadastro no https://www.themoviedb.org/ e seguir a documentação do site para entender como gera uma API key https://developers.themoviedb.org/3/getting-started/introduction\r\n\r\nvar apiKey = '72f7ce01c4b7f6021efe62fc965e21ea';\r\n//let apiKey;\r\nlet requestToken;\r\nlet username;\r\nlet password;\r\nlet sessionId;\r\nlet listId = '7101979';\r\n\r\nlet loginButton = document.getElementById('login-button') as HTMLElement;\r\nlet searchButton = document.getElementById('search-button') as HTMLElement;\r\nlet searchContainer = document.getElementById('search-container') as HTMLElement;\r\n\r\nloginButton.addEventListener('click', async () => {\r\n  await criarRequestToken();\r\n  await logar();\r\n  await criarSessao();\r\n})\r\n\r\nsearchButton.addEventListener('click', async () => {\r\n  let lista = document.getElementById(\"lista\");\r\n  if (lista) {\r\n    lista.outerHTML = \"\";\r\n  }\r\n  let query = document.getElementById('search').value;\r\n  let listaDeFilmes = await procurarFilme(query);\r\n  let ul = document.createElement('ul');\r\n  ul.id = \"lista\"\r\n  for (const item of listaDeFilmes.results) {\r\n    let li = document.createElement('li');\r\n    li.appendChild(document.createTextNode(item.original_title))\r\n    ul.appendChild(li)\r\n  }\r\n  console.log(listaDeFilmes);\r\n  searchContainer.appendChild(ul);\r\n})\r\n\r\nfunction preencherSenha() {\r\n  password = document.getElementById('senha').value;\r\n  validateLoginButton();\r\n}\r\n\r\nfunction preencherLogin() {\r\n  username =  document.getElementById('login').value;\r\n  validateLoginButton();\r\n}\r\n\r\nfunction preencherApi() {\r\n  apiKey = document.getElementById('api-key').value;\r\n  validateLoginButton();\r\n}\r\n\r\nfunction validateLoginButton() {\r\n  if (password && username && apiKey) {\r\n    loginButton.disabled = false;\r\n  } else {\r\n    loginButton.disabled = true;\r\n  }\r\n}\r\n\r\nclass HttpClient {\r\n  static async get({url, method, body = null}) {\r\n    return new Promise((resolve, reject) => {\r\n      let request = new XMLHttpRequest();\r\n      request.open(method, url, true);\r\n\r\n      request.onload = () => {\r\n        if (request.status >= 200 && request.status < 300) {\r\n          resolve(JSON.parse(request.responseText));\r\n        } else {\r\n          reject({\r\n            status: request.status,\r\n            statusText: request.statusText\r\n          })\r\n        }\r\n      }\r\n      request.onerror = () => {\r\n        reject({\r\n          status: request.status,\r\n          statusText: request.statusText\r\n        })\r\n      }\r\n\r\n      if (body) {\r\n        request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n        body = JSON.stringify(body);\r\n      }\r\n      request.send(body);\r\n    })\r\n  }\r\n}\r\n\r\nasync function procurarFilme(query) {\r\n  query = encodeURI(query)\r\n  console.log(query)\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`,\r\n    method: \"GET\"\r\n  })\r\n  return result\r\n}\r\n\r\nasync function adicionarFilme(filmeId) {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/movie/${filmeId}?api_key=${apiKey}&language=en-US`,\r\n    method: \"GET\"\r\n  })\r\n  console.log(result);\r\n}\r\n\r\nasync function criarRequestToken () {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/authentication/token/new?api_key=${apiKey}`,\r\n    method: \"GET\"\r\n  })\r\n  requestToken = result.request_token\r\n}\r\n\r\nasync function logar() {\r\n  await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=${apiKey}`,\r\n    method: \"POST\",\r\n    body: {\r\n      username: `${username}`,\r\n      password: `${password}`,\r\n      request_token: `${requestToken}`\r\n    }\r\n  })\r\n}\r\n\r\nasync function criarSessao() {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/authentication/session/new?api_key=${apiKey}&request_token=${requestToken}`,\r\n    method: \"GET\"\r\n  })\r\n  sessionId = result.session_id;\r\n}\r\n\r\nasync function criarLista(nomeDaLista:string, descricao:string) {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/list?api_key=${apiKey}&session_id=${sessionId}`,\r\n    method: \"POST\",\r\n    body: {\r\n      name: nomeDaLista,\r\n      description: descricao,\r\n      language: \"pt-br\"\r\n    }\r\n  })\r\n  console.log(result);\r\n}\r\n\r\nasync function adicionarFilmeNaLista(filmeId, listaId) {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/list/${listaId}/add_item?api_key=${apiKey}&session_id=${sessionId}`,\r\n    method: \"POST\",\r\n    body: {\r\n      media_id: filmeId\r\n    }\r\n  })\r\n  console.log(result);\r\n}\r\n\r\nasync function pegarLista() {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/list/${listId}?api_key=${apiKey}`,\r\n    method: \"GET\"\r\n  })\r\n  console.log(result);\r\n}\r\n\r\n{/* <div style=\"display: flex;\">\r\n  <div style=\"display: flex; width: 300px; height: 100px; justify-content: space-between; flex-direction: column;\">\r\n      <input id=\"login\" placeholder=\"Login\" onchange=\"preencherLogin(event)\">\r\n      <input id=\"senha\" placeholder=\"Senha\" type=\"password\" onchange=\"preencherSenha(event)\">\r\n      <input id=\"api-key\" placeholder=\"Api Key\" onchange=\"preencherApi()\">\r\n      <button id=\"login-button\" disabled>Login</button>\r\n  </div>\r\n  <div id=\"search-container\" style=\"margin-left: 20px\">\r\n      <input id=\"search\" placeholder=\"Escreva...\">\r\n      <button id=\"search-button\">Pesquisar Filme</button>\r\n  </div>\r\n</div>*/}"],"names":[],"version":3,"file":"index.6b86260e.js.map","sourceRoot":"/__parcel_source_root/"}